{
	"info": {
		"_postman_id": "aca19a36-6e26-49c7-991c-e66b8d3c746f",
		"name": "test gophermart",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6652812"
	},
	"item": [
		{
			"name": "failed register, empty password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function clearCookie(){",
							"    const cookieJar = pm.cookies.jar();",
							"    const url = pm.request.url;",
							"    var callback = function(error, cookie){",
							"    if (error) {",
							"            console.log(error);   ",
							"        }else {",
							"            console.log(cookie)",
							"        }",
							"    }",
							"    cookieJar.clear(pm.request.url, 'token', callback);",
							"}",
							"clearCookie();",
							"",
							"pm.environment.set(\"url\", \"127.0.0.1:8080\");",
							"pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.environment.set(\"password\", \"\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\":\"{{username}}\",\n    \"password\":\"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/api/user/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "success register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Cookie token is present\", () => {",
							"  pm.expect(pm.cookies.has('token')).to.be.true;",
							"});",
							"",
							"pm.test(\"Authorization header is present\", () => {",
							"  pm.response.to.have.header(\"Authorization\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function clearCookie(){",
							"    const cookieJar = pm.cookies.jar();",
							"    const url = pm.request.url;",
							"    var callback = function(error, cookie){",
							"    if (error) {",
							"            console.log(error);   ",
							"        }else {",
							"            console.log(cookie)",
							"        }",
							"    }",
							"    cookieJar.clear(pm.request.url, 'token', callback);",
							"}",
							"clearCookie();",
							"pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.environment.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\":\"{{username}}\",\n    \"password\":\"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/api/user/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "failed login (uncorrect login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"",
							"pm.test(\"Authorization header is not present\", () => {",
							"    pm.response.to.not.have.header(\"Authorization\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function clearCookie(){",
							"    const cookieJar = pm.cookies.jar();",
							"    const url = pm.request.url;",
							"    var callback = function(error, cookie){",
							"    if (error) {",
							"            console.log(error);   ",
							"        }else {",
							"            console.log(cookie)",
							"        }",
							"    }",
							"    cookieJar.clear(pm.request.url, 'token', callback);",
							"}",
							"clearCookie();",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\":\"{{username}}l\",\n    \"password\":\"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/api/user/login",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "failed login (incorrect password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"",
							"pm.test(\"Authorization header is not present\", () => {",
							"    pm.response.to.not.have.header(\"Authorization\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function clearCookie(){",
							"    const cookieJar = pm.cookies.jar();",
							"    const url = pm.request.url;",
							"    var callback = function(error, cookie){",
							"    if (error) {",
							"            console.log(error);   ",
							"        }else {",
							"            console.log(cookie)",
							"        }",
							"    }",
							"    cookieJar.clear(pm.request.url, 'token', callback);",
							"}",
							"clearCookie();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\":\"{{username}}\",\n    \"password\":\"{{password}}s\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/api/user/login",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "success login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"",
							"pm.test(\"Authorization header is present\", () => {",
							"    pm.response.to.have.header(\"Authorization\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const cookieJar = pm.cookies.jar();",
							"const url = pm.request.url;",
							"var callback = function(error, cookie){",
							"if (error) {",
							"        console.log(error);   ",
							"    }else {",
							"        console.log(cookie)",
							"    }",
							"}",
							"cookieJar.clear(pm.request.url, 'token', callback);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\":\"{{username}}\",\n    \"password\":\"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}/api/user/login",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"user",
						"login"
					]
				}
			},
			"response": []
		}
	]
}